% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JORA_phenotype_v01.R,
%   R/June23_ORA_phenotype_v01.R, R/ORA_phenotype.R, R/ORA_phenotype_v01.R
\name{ORA_phenotype}
\alias{ORA_phenotype}
\title{Performs an overrepresentation analysis (ORA) across all groups and within each feature, then visualize results in a phenotype.}
\usage{
ORA_phenotype(
  features_df_row = features_df_row,
  condition_list = condition_list,
  group_label = group_label,
  reference_group = reference_group,
  percentiles = percentiles
)

ORA_phenotype(
  features_df_row = features_df_row,
  condition_list = condition_list,
  group_label = group_label,
  reference_group = reference_group,
  percentiles = percentiles
)

ORA_phenotype(
  features_df_row = features_df_row,
  condition_list = condition_list,
  group_label = group_label,
  reference_group = reference_group,
  percentiles = percentiles
)

ORA_phenotype(
  features_df_row = features_df_row,
  condition_list = condition_list,
  group_label = group_label,
  reference_group = reference_group,
  percentiles = percentiles
)
}
\arguments{
\item{features_df_row}{A dataframe that contains all features to be explored using an ORA. Specify row names for each observation must contain the experimental group.}

\item{condition_list}{A list of factors indicating the group identifiers as they appear in the data frame (row names)}

\item{group_label}{X-axis title.}

\item{reference_group}{A character string of the reference group as it appears in the row name. This indicates the group against which an ORA is performed.}

\item{percentiles}{A list of two values (in ascending order) that act as thresholds for the ORA. These values range between [0,1], with default values of c(0.25,0.75). The first number acts as the lower percentile for the experimental group, while the second acts as the upper percentile.}
}
\value{
Plots an ORA phenotype for each group, where coloured boxes indicate that a feature is outside of the 90% confidence interval --  default = c(0.05,0.95) -- of the reference group. The color "yellow" reflects when an experimental group is overrepresented (its lower percentile is larger than the reference groups' upper percentile ),  while "purple" is underrepresented  (its upper percentile is less than the reference groups' lower percentile ). Stores the object, 'ora.phen' in your global environment. The 'ora.phen' object contains ggplot visualization of each comparison.

Plots an ORA phenotype for each group, where coloured boxes indicate that a feature is outside of the 90% confidence interval --  default = c(0.05,0.95) -- of the reference group. The color "yellow" reflects when an experimental group is overrepresented (its lower percentile is larger than the reference groups' upper percentile ),  while "purple" is underrepresented  (its upper percentile is less than the reference groups' lower percentile ). Stores the object, 'ora.phen' in your global environment. The 'ora.phen' object contains ggplot visualization of each comparison.

Plots an ORA phenotype for each group, where coloured boxes indicate that a feature is outside of the 90% confidence interval --  default = c(0.05,0.95) -- of the reference group. The color "yellow" reflects when an experimental group is overrepresented (its lower percentile is larger than the reference groups' upper percentile ),  while "purple" is underrepresented  (its upper percentile is less than the reference groups' lower percentile ). Stores the object, 'ora.phen' in your global environment. The 'ora.phen' object contains ggplot visualization of each comparison.

Plots an ORA phenotype for each group, where coloured boxes indicate that a feature is outside of the 90% confidence interval --  default = c(0.05,0.95) -- of the reference group. The color "yellow" reflects when an experimental group is overrepresented (its lower percentile is larger than the reference groups' upper percentile ),  while "purple" is underrepresented  (its upper percentile is less than the reference groups' lower percentile ). Stores the object, 'ora.phen' in your global environment. The 'ora.phen' object contains ggplot visualization of each comparison.
}
\description{
ORA between groups and visualizes the significantly different features in a plasticity phenotype.

ORA between groups and visualizes the significantly different features in a plasticity phenotype.

ORA between groups and visualizes the significantly different features in a plasticity phenotype.

ORA between groups and visualizes the significantly different features in a plasticity phenotype.
}
\examples{
ORA_phenotype(features_df_row  = tsne.processed.4[,2:10], # Data frame for bootstrap analysis
             condition_list = as.list(c('Normal 1\n C,P,M',
                                         'LT BV 1\n C,P,M',
                                         'MD 1\n P,M',
                                         'LT BV 5\n P,M',
                                         'LT BV 4\n P,M',
                                         'RO 2\n C,P,M',
                                         'ST BV 3\n C,P,M',
                                         'MD 3\n C,P',
                                         'ST BV 5\n P',
                                         'ST BV 1\n C,P,M',
                                         'LT BV 6\n P',
                                         'BD 3\n C,P,M',
                                         'BD 6\n P')), # List of subclusters as they appear in row names of "features_df_row"
              reference_group =  'Normal 1\n C,P,M', # Name of reference group as it appears in the row names of "features_df_row"
              group_label  = "\nSubclusters",
              percentiles = c(0.1,0.9)
)
ORA_phenotype(features_df_row  = tsne.processed.4[,2:10], # Data frame for bootstrap analysis
             condition_list = as.list(c('Normal 1\n C,P,M',
                                         'LT BV 1\n C,P,M',
                                         'MD 1\n P,M',
                                         'LT BV 5\n P,M',
                                         'LT BV 4\n P,M',
                                         'RO 2\n C,P,M',
                                         'ST BV 3\n C,P,M',
                                         'MD 3\n C,P',
                                         'ST BV 5\n P',
                                         'ST BV 1\n C,P,M',
                                         'LT BV 6\n P',
                                         'BD 3\n C,P,M',
                                         'BD 6\n P')), # List of subclusters as they appear in row names of "features_df_row"
              reference_group =  'Normal 1\n C,P,M', # Name of reference group as it appears in the row names of "features_df_row"
              group_label  = "\nSubclusters",
              percentiles = c(0.1,0.9)
)
ORA_phenotype(features_df_row  = tsne.processed.4[,2:10], # Data frame for bootstrap analysis
             condition_list = as.list(c('Normal 1\n C,P,M',
                                         'LT BV 1\n C,P,M',
                                         'MD 1\n P,M',
                                         'LT BV 5\n P,M',
                                         'LT BV 4\n P,M',
                                         'RO 2\n C,P,M',
                                         'ST BV 3\n C,P,M',
                                         'MD 3\n C,P',
                                         'ST BV 5\n P',
                                         'ST BV 1\n C,P,M',
                                         'LT BV 6\n P',
                                         'BD 3\n C,P,M',
                                         'BD 6\n P')), # List of subclusters as they appear in row names of "features_df_row"
              reference_group =  'Normal 1\n C,P,M', # Name of reference group as it appears in the row names of "features_df_row"
              group_label  = "\nSubclusters",
              percentiles = c(0.1,0.9)
)
ORA_phenotype(features_df_row  = tsne.processed.4[,2:10], # Data frame for bootstrap analysis
             condition_list = as.list(c('Normal 1\n C,P,M',
                                         'LT BV 1\n C,P,M',
                                         'MD 1\n P,M',
                                         'LT BV 5\n P,M',
                                         'LT BV 4\n P,M',
                                         'RO 2\n C,P,M',
                                         'ST BV 3\n C,P,M',
                                         'MD 3\n C,P',
                                         'ST BV 5\n P',
                                         'ST BV 1\n C,P,M',
                                         'LT BV 6\n P',
                                         'BD 3\n C,P,M',
                                         'BD 6\n P')), # List of subclusters as they appear in row names of "features_df_row"
              reference_group =  'Normal 1\n C,P,M', # Name of reference group as it appears in the row names of "features_df_row"
              group_label  = "\nSubclusters",
              percentiles = c(0.1,0.9)
)
}
